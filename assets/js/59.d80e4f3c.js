(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{412:function(t,e,a){"use strict";a.r(e);var s=a(45),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_6-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-regexp"}},[t._v("#")]),t._v(" 6. RegExp")]),t._v(" "),a("h4",{attrs:{id:"正则表达式修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式修饰符"}},[t._v("#")]),t._v(" 正则表达式修饰符")]),t._v(" "),a("p",[a("strong",[t._v("修饰符")]),t._v(" 可以在全局搜索中不区分大小写:")]),t._v(" "),a("p",[t._v("| 修饰符 | 描述                                                     |\n| :---  -- | :------------------------------------------------------- |\n| i      | 执行对大小写不敏感的匹配。                               |\n| g      | 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。 |\n| m      | 执行多行匹配。                                           |")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"正则表达式模式4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式模式4"}},[t._v("#")]),t._v(" 正则表达式模式4")]),t._v(" "),a("p",[t._v("方括号用于查找某个范围内的字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("表达式")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[abc]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找方括号之间的任何字符。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[0-9]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找任何从 0 至 9 的数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("(x|y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找任何以 | 分隔的选项。")])])])]),t._v(" "),a("p",[t._v("元字符是拥有特殊含义的字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("元字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\d")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\s")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找空白字符。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配单词边界。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\uxxxx")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找以十六进制数 xxxx 规定的 Unicode 字符。")])])])]),t._v(" "),a("p",[t._v("量词:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("量词")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含至少一个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含零个或多个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n?")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含零个或一个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])])])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-regexp-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-regexp-对象"}},[t._v("#")]),t._v(" 使用 RegExp 对象")]),t._v(" "),a("p",[t._v("在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-test"}},[t._v("#")]),t._v(" 使用 test()")]),t._v(" "),a("p",[t._v("test() 方法是一个正则表达式方法。")]),t._v(" "),a("p",[t._v("test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。")]),t._v(" "),a("p",[t._v('以下实例用于搜索字符串中的字符 "e"：')]),t._v(" "),a("h4",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v('var patt = /e/;\npatt.test("The best things in life are free!");')]),t._v(" "),a("p",[t._v('字符串中含有 "e"，所以该实例输出为：')]),t._v(" "),a("p",[t._v("true")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/try/tryit.php?filename=tryjs_regexp_test",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("你可以不用设置正则表达式的变量，以上两行代码可以合并为一行：")]),t._v(" "),a("p",[t._v('/e/.test("The best things in life are free!")')]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-exec"}},[t._v("#")]),t._v(" 使用 exec()")]),t._v(" "),a("p",[t._v("exec() 方法是一个正则表达式方法。")]),t._v(" "),a("p",[t._v("exec() 方法用于检索字符串中的正则表达式的匹配。")]),t._v(" "),a("p",[t._v("该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。")]),t._v(" "),a("p",[t._v('以下实例用于搜索字符串中的字母 "e":')]),t._v(" "),a("h4",{attrs:{id:"实例-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-1"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),a("p",[t._v('/e/.exec("The best things in life are free!");')]),t._v(" "),a("p",[t._v('字符串中含有 "e"，所以该实例输出为:')]),t._v(" "),a("p",[t._v("e")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/try/tryit.php?filename=tryjs_regexp_exec",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"更多实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多实例"}},[t._v("#")]),t._v(" 更多实例")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3527",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否为数字、字母、下划线组成"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3526",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否全部为字母"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3525",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否全部为数字"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"完整的-regexp-参考手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整的-regexp-参考手册"}},[t._v("#")]),t._v(" 完整的 RegExp 参考手册")]),t._v(" "),a("p",[t._v("完整的 RegExp 对象参考手册，请参考我们的 "),a("a",{attrs:{href:"https://www.runoob.com/jsref/jsref-obj-regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript RegExp 参考手册"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("该参考手册包含了所有 RegExp 对象的方法和属性。")]),t._v(" "),a("h3",{attrs:{id:"regexp常用实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp常用实例"}},[t._v("#")]),t._v(" RegExp常用实例")]),t._v(" "),a("h4",{attrs:{id:"正则表达式表单验证实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式表单验证实例"}},[t._v("#")]),t._v(" 正则表达式表单验证实例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*是否带有小数*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("strValue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  objRegExp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+\\.\\d+$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  objRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验是否中文名称组成 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ischina")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4E00-\\u9FA5]{2,4}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*定义验证表达式*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*进行验证*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验是否全由8位数字组成 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStudentNo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[0-9]{8}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*定义验证表达式*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*进行验证*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验电话码格式 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTelCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^((0\\d{2,3}-\\d{7,8})|(1[3584]\\d{9}))$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验邮件地址是否合法 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsEmail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\w+@[a-zA-Z0-9]{2,10}(?:\\.[a-z]{2,4}){1,3}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);